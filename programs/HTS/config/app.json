{
    "Client HTS Access Type": {
        "options": [
            "Routine HTS (PITC) within Health Service",
            "Comes with HTS Family Referral Slip",
            "Other (VCT, etc.)"
        ],
        "className": "longSelectList",
        "autoNext": true
    },
    "HTS Access Type": {
        "options": [
            "Routine HTS (PITC) within Health Service",
            "Comes with HTS Family Referral Slip",
            "Other (VCT, etc.)"
        ],
        "className": "longSelectList",
        "autoNext": true
    },
    "Last HIV Test Result": {
        "options": [
            "Never Tested",
            "Last Negative",
            "Last Positive",
            "Last Inconclusive",
            "Last Exposed Infant"
        ],
        "className": "longSelectList",
        "autoNext": true
    },
    "Client Risk Category": {
        "options": [
            "Low Risk",
            "On-going Risk",
            "High Risk Event in Last 3 months",
            "Risk assessment Not Done"
        ],
        "className": "longSelectList",
        "autoNext": true
    },
    "Appointment Date Given": {
        "fieldType": "date",
        "minDate": "today",
        "maxDate": "today + 1year"
    },
    "HTS Family Referral Slips": {
        "customComponent": "FamilyRefs",
        "properties": {
            "label": "HTS Family Referral Slips"
        }
    },
    "Comments": {
        "fieldType": "textarea",
        "optional": true
    },
    "Client Last HIV Test Result": {
        "options": [
            "Never Tested",
            "Last Negative",
            "Last Positive",
            "Last Inconclusive"
        ],
        "className": "longSelectList",
        "autoNext": true
    },
    "Test result Positive or Inconclusive?": {
        "visible": false,
        "func": [
            "Result Given to Client",
            "match",
            "New Positive|Inconclusive|New Exposed Infant",
            "Testing"
        ]
    },
    "Search By": {
        "autoNext": true
    },
    "Last Negative or Never Tested?": {
        "visible": false,
        "func": [
            "Last HIV Test Result",
            "match",
            "Last\\sNegative|Never\\sTested",
            "HTS Visit"
        ]
    },
    "First Pass Test 1 Result": {
        "customComponent": "SingleTestResult",
        "properties": {
            "label": "First Pass Test 1 Result",
            "duration": "15 Minutes",
            "test": "Determine HIV 1/2 Result"
        }
    },
    "First Pass Test 1 Negative?": {
        "visible": false,
        "func": [
            "First Pass Test 1 Result",
            "equal",
            "Non-Reactive",
            "Testing"
        ]
    },
    "First Pass Test 2 Result": {
        "customComponent": "SingleTestResult",
        "properties": {
            "label": "First Pass Test 2 Result",
            "duration": "10 Minutes",
            "test": "Uni-Gold Result"
        }
    },
    "First Pass Test 2 Negative?": {
        "visible": false,
        "func": [
            "First Pass Test 2 Result",
            "equal",
            "Non-Reactive",
            "Testing"
        ]
    },
    "Immediate Parallel Repeat Test 1 & 2 Results": {
        "customComponent": "ParallelTestResult",
        "properties": {
            "label": "Immediate Parallel Repeat Test 1 & 2 Results",
            "duration": "15 Minutes",
            "test": "Determine HIV 1/2 Result",
            "duration2": "10 Minutes",
            "test2": "Uni-Gold Result"
        }
    },
    "Repeat Test 1 Negative?": {
        "visible": false,
        "func": [
            "Immediate Repeat Test 1 Result",
            "equal",
            "Non-Reactive",
            "Testing"
        ]
    },
    "Repeat Test 2 Positive?": {
        "visible": false,
        "func": [
            "Immediate Repeat Test 2 Result",
            "equal",
            "Reactive",
            "Testing"
        ]
    },
    "Repeat Test 2 Negative?": {
        "visible": false,
        "func": [
            "Immediate Repeat Test 2 Result",
            "equal",
            "Non-Reactive",
            "Testing"
        ]
    },
    "Age Under 12 Months?": {
        "visible": false,
        "func": [
            "age",
            "lessThan",
            "12",
            "Testing",
            "Months"
        ]
    },
    "HTS Family Slips Given": {
        "fieldType": "number",
        "hiddenButtons": [
            "clear",
            "/",
            ".",
            "-",
            "abc",
            "qwe",
            "Unknown"
        ]
    },
    "First Pass Parallel Test 1 & 2 Results": {
        "customComponent": "ParallelTestResult",
        "properties": {
            "label": "First Pass Parallel Test 1 & 2 Results",
            "duration": "15 Minutes",
            "test": "Determine HIV 1/2 Result",
            "duration2": "10 Minutes",
            "test2": "Uni-Gold Result"
        }
    },
    "Last Positive?": {
        "visible": false,
        "func": [
            "Last HIV Test Result",
            "equal",
            "Last Positive",
            "HTS Visit"
        ]
    },
    "FP Test 1 & 2 Negative?": {
        "visible": false,
        "func": [
            [
                "First Pass Test 1 Result",
                "First Pass Test 2 Result"
            ],
            "equal",
            "Non-Reactive",
            "Testing"
        ]
    },
    "FP Test 1 & 2 Positive?": {
        "visible": false,
        "func": [
            [
                "First Pass Test 1 Result",
                "First Pass Test 2 Result"
            ],
            "equal",
            "Reactive",
            "Testing"
        ]
    },
    "IR Test 1 & 2 Negative?": {
        "visible": false,
        "func": [
            [
                "Immediate Repeat Test 1 Result",
                "Immediate Repeat Test 2 Result"
            ],
            "equal",
            "Non-Reactive",
            "Testing"
        ]
    },
    "IR Test 1 & 2 Positive?": {
        "visible": false,
        "func": [
            [
                "Immediate Repeat Test 1 Result",
                "Immediate Repeat Test 2 Result"
            ],
            "equal",
            "Reactive",
            "Testing"
        ]
    },
    "Service Delivery Point": {
        "options": [
            "PITC Malnutrition Facilities",
            "PITC PMTCT (ANC Only)",
            "PITC TB Clinics",
            "VMMC Services",
            "Other PITC",
            "VCT"
        ],
        "className": "longSelectList",
        "autoNext": true
    },
    "Last HIV Test done?": {
        "visible": false,
        "func": [
            "Last HIV Test Result",
            "notEqual",
            "Never Tested",
            "HTS Visit"
        ]
    },
    "Time Since Last Test": {
        "fieldType": "period",
        "hiddenButtons": [
            "clear", "Unknown"
        ],
        "readOnly": true,
        "minDuration": "age",
        "validationRule": "^\\d+[D|W|M|Y]$",
        "validationMessage": "Number and time units \n (days, weeks, months, years) \n must be entered",
        "title": "Missing Data",
        "validationCases": {
            "cases": [
                {
                    "pattern": "^[0-9]D$|^[1-2][0-9]D$|^30D$",
                    "patternGroup": "\\d+D$",
                    "title": "Invalid Entry",
                    "message": "Number of days between 0 and 30 \n must be entered"
                },
                {
                    "pattern": "^[1-9]W$|^[1][0-9]W$|^[2][0-6]W$",
                    "patternGroup": "\\d+W$",
                    "title": "Invalid Entry",
                    "message": "Number of weeks between 1 and 26 \n must be entered"
                },
                {
                    "pattern": "^[1-9]M$|^[1][0-9]M$|^[2][0-9]M$|^[3][0-6]M$",
                    "patternGroup": "\\d+M$",
                    "title": "Invalid Entry",
                    "message": "Number of months between 1 and 36 \n must be entered"
                },
                {
                    "pattern": "^[1-9]Y$|^[1-9][0-9]Y$|^[1][0][0-9]Y$|^110Y$",
                    "patternGroup": "\\d+Y$",
                    "title": "Invalid Entry",
                    "message": "Number of years between 1 and 110 \n must be entered"
                }
            ]
        }
    },
    "Gender is Female?": {
        "visible": false,
        "func": [
            "gender",
            "equal",
            "Female",
            "Patient"
        ]
    },
    "Child bearing age?": {
        "visible": false,
        "func": [
            "age",
            "inRange",
            "10",
            "45",
            "Patient"
        ]
    },
    "Age less than 10?": {
        "visible": false,
        "func": [
            "age",
            "lessThan",
            "120",
            "HTS Visit",
            "months"
        ]
    },
    "High risk event in last 3 months?": {
        "visible": false,
        "func": [
            "Client Risk Category",
            "equal",
            "High Risk Event in Last 3 months",
            "HTS Visit"
        ]
    },
    "Ongoing risky behaviour?": {
        "visible": false,
        "func": [
            "Client Risk Category",
            "equal",
            "On-going Risk",
            "HTS Visit"
        ]
    },
    "Age 12-23 months?": {
        "visible": false,
        "func": [
            "age",
            "inRange",
            "1",
            "2",
            "Patient"
        ]
    },
    "Pregnant female?": {
        "visible": false,
        "func": [
            "Sex/Pregnancy",
            "equal",
            "Female Pregnant",
            "HTS Visit"
        ]
    },
    "Child?": {
        "visible": false,
        "func": [
            "age",
            "inRange",
            "0",
            "14",
            "Patient"
        ]
    },
    "Partner HIV Status": {
        "options": [
            "No Partner",
            "HIV Unknown",
            "Partner Negative",
            "Partner Positive"
        ],
        "className": "longSelectList",
        "condition": "!{{dual}}",
        "action": "updatePartnerStatus('hiv status', props, state)"
    },
    "Number of male condoms given": {
        "fieldType": "number",
        "validationRule": "^[0-9]$|^[1-9][0-9]$|^[1-4][0-9][0-9]$|^500$",
        "validationMessage": "Number of male condoms given \n must be between 0-500",
        "hiddenButtons": ["clear", "/", ".", "-", "abc", "qwe", "Unknown"]
    },
    "Number of female condoms given": {
        "fieldType": "number",
        "validationRule": "^[0-9]$|^[1-9][0-9]$|^[1-4][0-9][0-9]$|^500$",
        "validationMessage": "Number of female condoms given \n must be between 0-500",
        "hiddenButtons": ["clear", "/", ".", "-", "abc", "qwe", "Unknown"]
    },
    "action": "/programs/save_encounters"
}